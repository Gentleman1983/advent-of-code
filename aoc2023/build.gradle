import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import com.pswidersk.gradle.python.VenvTask

plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'com.pswidersk.python-plugin' version '2.4.0'
}

dependencies {
    api project(":utils")

    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation("org.jgrapht:jgrapht-core:1.5.2")

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

application {
    mainClass = 'de.havox_design.aoc2023.MainClass'
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
        attributes 'Main-Class': 'de.havox_design.aoc2023.MainClass'
    }
}

pythonPlugin {
    pythonVersion = "3.12"
    condaVersion = "latest"
    installDir = file(project.layout.buildDirectory.file("python"))
}

afterEvaluate {
    def pipTask = tasks.register('pipInstall', VenvTask) {
        venvExec = "pip"
        args = ["install", "--isolated", "-r", "requirements.txt"]
    }

    def solverTask = tasks.register('solveDay24Part2', VenvTask) {
        workingDir = project.file('src/main/resources')
        args = [project.file("src/main/python/Day24pt2.py").toString()]
        dependsOn(pipTask)
    }

    compileKotlin.dependsOn(solverTask)
}

sourceSets {
    main {
        java {
            srcDir project.file('src/main/python')
        }
    }
}

sonarqube {
    properties {
        property 'sonar.python.version', '3.12'
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
