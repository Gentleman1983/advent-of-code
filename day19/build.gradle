import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import com.pswidersk.gradle.python.VenvTask

plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.9.21'
    id 'com.pswidersk.python-plugin' version '2.4.0'
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = TestExceptionFormat.FULL
    }

    reports {
        junitXml.required = true
        html.required = true
    }

    jacocoTestReport.dependsOn(it)
}

jacocoTestReport {
    reports {
        html.required.set(true)
        xml.required.set(true)
        xml.outputLocation.set(file("${project.layout.buildDirectory}/jacoco/jacoco.xml"))
    }

    rootProject.tasks.sonar.dependsOn(it)
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
        attributes 'Main-Class': 'de.havox_design.aoc2015.day19.MainClass'
    }
}

application {
    mainClass = 'de.havox_design.aoc2015.day19.MainClass'
}

pythonPlugin {
    pythonVersion.set("3.12")
    installDir.set(file(rootProject.layout.buildDirectory.file("python")))
}

afterEvaluate {
    def pipTask = tasks.register('pipInstall', VenvTask) {
        venvExec = "pip"
        args = ["install", "--isolated", "-r", "requirements.txt"]
    }

    def solverTask = tasks.register('solvePart2', VenvTask) {
        workingDir = project.file('src/main/resources')
        args = [project.file("src/main/python/solvePart2.py").toString()]
        dependsOn(pipTask)
    }

    compileKotlin.dependsOn(solverTask)
}

sourceSets {
    main {
        java {
            srcDir project.file('src/main/python')
        }
    }
}
sonar {
    properties {
        property 'sonar.python.version', '3.12'
    }
}
